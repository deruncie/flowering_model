}
if(genotype == '35S:TFL1 fd-2 fdp-1'){  #check
new_parms$v_35S[2] = exp_35S
new_parms$mutants[3] = .95
new_parms$init <- c(0, 10.7, 0.005, 0.1, 0, 0, 1)
}
if(genotype == '35S:FT fd-2 fdp-1'){  #check, regardless of exp_35S
new_parms$v_35S[1] = exp_35S
new_parms$mutants[3] = .95
new_parms$init <- c(10, 0.1, 0.005, 0.1, 0, 0, 1)
}
return(new_parms)
}
#Predicts leaf number for various genotypes
predict_genotype = function(genotype,parms){
new_parms = genotype_parms(genotype,parms)
new_parms$init[1:5] = new_parms$init[1:5] #* (1-new_parms$mutants)
return(predict_leaves(new_parms))
}
new_parms <- parms_ori
x=seq(0,50,by=.1)
genotype = 'Col'
new_parms = genotype_parms(genotype,parms_ori)
s1 <- fit_model_ori(parms_ori)
cols = c('red','blue','black','green','gray')
x=x*time_scale
plot(NA,NA,xlim = range(x),ylim = c(0,1))#range(s1[,-1]))
for(i in 2:6){
lines(s1[,1]*time_scale,s1[,i],col=cols[i-1])
}
legend('topright',legend=c('FT','TFL1','FD','LFY','AP1'),col=cols,lty=1, cex = 0.75)
abline(h = 0.2, lty = 2)
genotype = 'ft-10'
s1 <- fit_model_ori(parms_ori)
cols = c('red','blue','black','green','gray')
x=x*time_scale
plot(NA,NA,xlim = range(x),ylim = c(0,1))#range(s1[,-1]))
for(i in 2:6){
lines(s1[,1]*time_scale,s1[,i],col=cols[i-1])
}
genotype = 'ft-10'
new_parms = genotype_parms(genotype,parms_ori)
s1 <- fit_model_ori(new_parms)
cols = c('red','blue','black','green','gray')
x=x*time_scale
plot(NA,NA,xlim = range(x),ylim = c(0,1))#range(s1[,-1]))
for(i in 2:6){
lines(s1[,1]*time_scale,s1[,i],col=cols[i-1])
}
genotype_parms = function(genotype,parms){
new_parms <- parms #parms
new_parms$init <- init
#Col 					#check
if(genotype == '35S:FT'){ #check
new_parms$v_35S[1] = exp_35S #1.3-1.8
new_parms$init <- c(10, 0.6, 0.1, 0.1, 0, 0, 0)
}
if(genotype == '35S:LFY'){
new_parms$v_35S[4] = exp_35S #nothing gets is fast enough (minimum = 5 Ros leaves)
new_parms$init <- c(0, 0.6, 0.1, 10.1, 0, 0, 1)
}
if(genotype == '35S:TFL1'){ #not with this parameter
new_parms$v_35S[2] = exp_35S #1
new_parms$init <- c(0, 10.7, 0.1, 0.1, 0, 0, 1)
}
if(genotype == 'lfy-12'){   #check
new_parms$mutants[4] = 1
new_parms$init <- c(0, 0.6, 0.1, 0, 0, 0, 1)
}
if(genotype == 'ft-10'){	#check
new_parms$mutants[1] = 1
new_parms$init <- c(0, 0.6, 0, 0, 0, 0, 1)
}
if(genotype == 'tfl-1'){   #check
new_parms$mutants[2] = 1
new_parms$init <- c(0, 0, 0.1, 0.1, 0, 0, 1)
}
if(genotype == 'fd-2'){    #check
new_parms$mutants[3] = 0.75
new_parms$init <- c(0, 0.6, 0.025, 0.1, 0, 0, 1)
}
if(genotype == 'fdp-1'){   #check
new_parms$mutants[3] = 0.2
new_parms$init <- c(0, 0.6, 0.08, 0.1, 0, 0, 1)
}
if(genotype == 'fd-2 fdp-1'){   #check
new_parms$mutants[3] = 0.95
new_parms$init <- c(0, 0.6, 0.005, 0.1, 0, 0, 1)
}
if(genotype == '35S:TFL1 fd-2'){  #check, exp_35S = 1
new_parms$v_35S[2] = exp_35S
new_parms$mutants[3] = 0.75
new_parms$init <- c(0, 10.7, 0.025, 0.1, 0, 0, 1)
}
if(genotype == 'tfl1-1 fd-2'){   #check
new_parms$mutants[2] = 1
new_parms$mutants[3] = 0.75
new_parms$init <- c(0, 0, 0.025, 0.1, 0, 0, 1)
}
if(genotype == '35S:FT fd-2'){   #check at exp_35S = 1.0
new_parms$v_35S[1] = exp_35S
new_parms$mutants[3] = 0.75
new_parms$init <- c(10, 0.6, 0.025, 0.1, 0, 0, 1)
}
if(genotype == 'tfl1-1 fd-2 fdp-1'){  #check
new_parms$mutants[2] = 1
new_parms$mutants[3] = .95
new_parms$init <- c(0, 0.6, 0.005, 0.1, 0, 0, 1)
}
if(genotype == '35S:TFL1 fd-2 fdp-1'){  #check
new_parms$v_35S[2] = exp_35S
new_parms$mutants[3] = .95
new_parms$init <- c(0, 10.7, 0.005, 0.1, 0, 0, 1)
}
if(genotype == '35S:FT fd-2 fdp-1'){  #check, regardless of exp_35S
new_parms$v_35S[1] = exp_35S
new_parms$mutants[3] = .95
new_parms$init <- c(10, 0.1, 0.005, 0.1, 0, 0, 1)
}
return(new_parms)
}
genotype = 'ft-10'
new_parms = genotype_parms(genotype,parms_ori)
s1 <- fit_model_ori(new_parms)
cols = c('red','blue','black','green','gray')
x=x*time_scale
plot(NA,NA,xlim = range(x),ylim = c(0,1))#range(s1[,-1]))
for(i in 2:6){
lines(s1[,1]*time_scale,s1[,i],col=cols[i-1])
}
x=seq(0,200,by=.1)
genotype = 'ft-10'
new_parms = genotype_parms(genotype,parms_ori)
s1 <- fit_model_ori(new_parms)
cols = c('red','blue','black','green','gray')
x=x*time_scale
plot(NA,NA,xlim = range(x),ylim = c(0,1))#range(s1[,-1]))
for(i in 2:6){
lines(s1[,1]*time_scale,s1[,i],col=cols[i-1])
}
genotype_parms = function(genotype,parms){
new_parms <- parms #parms
new_parms$init <- init
#Col 					#check
if(genotype == '35S:FT'){ #check
new_parms$v_35S[1] = exp_35S #1.3-1.8
new_parms$init <- c(10, 0.6, 0.1, 0.1, 0, 0, 0)
}
if(genotype == '35S:LFY'){
new_parms$v_35S[4] = exp_35S #nothing gets is fast enough (minimum = 5 Ros leaves)
new_parms$init <- c(0, 0.6, 0.1, 10.1, 0, 0, 1)
}
if(genotype == '35S:TFL1'){ #not with this parameter
new_parms$v_35S[2] = exp_35S #1
new_parms$init <- c(0, 10.7, 0.1, 0.1, 0, 0, 1)
}
if(genotype == 'lfy-12'){   #check
new_parms$mutants[4] = 1
new_parms$init <- c(0, 0.6, 0.1, 0, 0, 0, 1)
}
if(genotype == 'ft-10'){	#check
new_parms$mutants[1] = 1
new_parms$init <- c(0, 0.6, 0.1, 0.1, 0, 0, 1)
}
if(genotype == 'tfl-1'){   #check
new_parms$mutants[2] = 1
new_parms$init <- c(0, 0, 0.1, 0.1, 0, 0, 1)
}
if(genotype == 'fd-2'){    #check
new_parms$mutants[3] = 0.75
new_parms$init <- c(0, 0.6, 0.025, 0.1, 0, 0, 1)
}
if(genotype == 'fdp-1'){   #check
new_parms$mutants[3] = 0.2
new_parms$init <- c(0, 0.6, 0.08, 0.1, 0, 0, 1)
}
if(genotype == 'fd-2 fdp-1'){   #check
new_parms$mutants[3] = 0.95
new_parms$init <- c(0, 0.6, 0.005, 0.1, 0, 0, 1)
}
if(genotype == '35S:TFL1 fd-2'){  #check, exp_35S = 1
new_parms$v_35S[2] = exp_35S
new_parms$mutants[3] = 0.75
new_parms$init <- c(0, 10.7, 0.025, 0.1, 0, 0, 1)
}
if(genotype == 'tfl1-1 fd-2'){   #check
new_parms$mutants[2] = 1
new_parms$mutants[3] = 0.75
new_parms$init <- c(0, 0, 0.025, 0.1, 0, 0, 1)
}
if(genotype == '35S:FT fd-2'){   #check at exp_35S = 1.0
new_parms$v_35S[1] = exp_35S
new_parms$mutants[3] = 0.75
new_parms$init <- c(10, 0.6, 0.025, 0.1, 0, 0, 1)
}
if(genotype == 'tfl1-1 fd-2 fdp-1'){  #check
new_parms$mutants[2] = 1
new_parms$mutants[3] = .95
new_parms$init <- c(0, 0.6, 0.005, 0.1, 0, 0, 1)
}
if(genotype == '35S:TFL1 fd-2 fdp-1'){  #check
new_parms$v_35S[2] = exp_35S
new_parms$mutants[3] = .95
new_parms$init <- c(0, 10.7, 0.005, 0.1, 0, 0, 1)
}
if(genotype == '35S:FT fd-2 fdp-1'){  #check, regardless of exp_35S
new_parms$v_35S[1] = exp_35S
new_parms$mutants[3] = .95
new_parms$init <- c(10, 0.1, 0.005, 0.1, 0, 0, 1)
}
return(new_parms)
}
genotype = 'ft-10'
new_parms = genotype_parms(genotype,parms_ori)
s1 <- fit_model_ori(new_parms)
cols = c('red','blue','black','green','gray')
x=x*time_scale
plot(NA,NA,xlim = range(x),ylim = c(0,1))#range(s1[,-1]))
for(i in 2:6){
lines(s1[,1]*time_scale,s1[,i],col=cols[i-1])
}
genotype_parms = function(genotype,parms){
new_parms <- parms #parms
new_parms$init <- init
#Col 					#check
if(genotype == '35S:FT'){ #check
new_parms$v_35S[1] = exp_35S #1.3-1.8
new_parms$init <- c(10, 0.6, 0.1, 0.1, 0, 0, 0)
}
if(genotype == '35S:LFY'){
new_parms$v_35S[4] = exp_35S #nothing gets is fast enough (minimum = 5 Ros leaves)
new_parms$init <- c(0, 0.6, 0.1, 10.1, 0, 0, 1)
}
if(genotype == '35S:TFL1'){ #not with this parameter
new_parms$v_35S[2] = exp_35S #1
new_parms$init <- c(0, 10.7, 0.1, 0.1, 0, 0, 1)
}
if(genotype == 'lfy-12'){   #check
new_parms$mutants[4] = 1
new_parms$init <- c(0, 0.6, 0.1, 0, 0, 0, 1)
}
if(genotype == 'ft-10'){	#check
new_parms$mutants[1] = 1
new_parms$init <- c(0, 0.6, 0.1, 0.1, 0, 0, 1)
}
if(genotype == 'tfl-1'){   #check
new_parms$mutants[2] = 1
new_parms$init <- c(0, 0, 0.1, 0.1, 0, 0, 1)
}
if(genotype == 'fd-2'){    #check
new_parms$mutants[3] = 0.75
new_parms$init <- c(0, 0.6, 0.025, 0.1, 0, 0, 1)
}
if(genotype == 'fdp-1'){   #check
new_parms$mutants[3] = 0.2
new_parms$init <- c(0, 0.6, 0.08, 0.1, 0, 0, 1)
}
if(genotype == 'fd-2 fdp-1'){   #check
new_parms$mutants[3] = 0.95
new_parms$init <- c(0, 0.6, 0.005, 0.1, 0, 0, 1)
}
if(genotype == '35S:TFL1 fd-2'){  #check, exp_35S = 1
new_parms$v_35S[2] = exp_35S
new_parms$mutants[3] = 0.75
new_parms$init <- c(0, 10.7, 0.025, 0.1, 0, 0, 1)
}
if(genotype == 'tfl1-1 fd-2'){   #check
new_parms$mutants[2] = 1
new_parms$mutants[3] = 0.75
new_parms$init <- c(0, 0, 0.025, 0.1, 0, 0, 1)
}
if(genotype == '35S:FT fd-2'){   #check at exp_35S = 1.0
new_parms$v_35S[1] = exp_35S
new_parms$mutants[3] = 0.75
new_parms$init <- c(10, 0.6, 0.025, 0.1, 0, 0, 1)
}
if(genotype == 'tfl1-1 fd-2 fdp-1'){  #check
new_parms$mutants[2] = 1
new_parms$mutants[3] = .95
new_parms$init <- c(0, 0.6, 0.005, 0.1, 0, 0, 1)
}
if(genotype == '35S:TFL1 fd-2 fdp-1'){  #check
new_parms$v_35S[2] = exp_35S
new_parms$mutants[3] = .95
new_parms$init <- c(0, 10.7, 0.005, 0.1, 0, 0, 1)
}
if(genotype == '35S:FT fd-2 fdp-1'){  #check, regardless of exp_35S
new_parms$v_35S[1] = exp_35S
new_parms$mutants[3] = .95
new_parms$init <- c(10, 0.1, 0.005, 0.1, 0, 0, 1)
}
return(new_parms)
}
new_parms <- parms_ori
x=seq(0,200,by=.1)
genotype = 'ft-10'
new_parms = genotype_parms(genotype,parms_ori)
s1 <- fit_model_ori(new_parms)
cols = c('red','blue','black','green','gray')
x=x*time_scale
plot(NA,NA,xlim = range(x),ylim = c(0,1))#range(s1[,-1]))
for(i in 2:6){
lines(s1[,1]*time_scale,s1[,i],col=cols[i-1])
}
rm(list = ls())
p <- ggplot(mtcars, aes(factor(cyl), mpg))
install.packages("ggplot2")
library(ggplot2)
p <- ggplot(mtcars, aes(factor(cyl), mpg))
p + geom_boxplot()
head(mtcars)
p + geom_boxplot(aes(fill = factor(cyl)))
library(deSolve)
t <- seq(0, 300, by = 0.01)
init <- c(0, 0.6, 0.1, 0.1, 0, 1)
tomato_model = function(t,X,parms=NULL,...){
with(as.list(parms),{
#Hub Gene Activation
#LFY -> FD
p_1_3 = X[1]^h_1_3 / (K_1_3^h_1_3 + X[1]^h_1_3)
#FT:FD -> LFY
p_2_3 = X[2]^h_2_3 / (K_2_3^h_1_3 + X[2]^h_2_3)
#TFL1:FD -> LFY
p_3_5 = X[3]^h_3_5 / (K_3_5^h_3_5 + X[3]^h_3_5)
#AP1 -> LFY
p_4_5 = X[4]^h_4_5 / (K_4_5^h_4_5 + X[4]^h_4_5)
rho = matrix(0,nr=5,nc=2)
rho[1,1] = 1; rho[1,2] = 0
rho[2,1] = 1; rho[2,2] = 0
rho[3,2] = p_1_3*(1 - p_2_3); rho[3,1] = 1 - rho[3,2]
rho[4,1] = 1; rho[4,2] = 0
rho[5,2] = p_3_5*(1 - p_4_5); rho[5,1] = 1 - rho[5,2]
v = matrix(0,nr=5,nc=2)
v[,1] = c(eta_leaf*X[6], 0.01, 0.01, eta_leaf*X[6],0.01)
v[,2] = c(0, 0, 0.05, 0, 0.05)
v = v_35S + rowSums(rho * v)
V = rep(0,length(X))
V[1:5] = v*(1-mutants) 	# If a gene is mutated, set it's change = 0
V[6] = X[7]		# change in # leaves
V = V - delta*X  # subtract degradation
return(list(
Derivitaves = V,
globals = c(
p_1_3,
p_2_3,
p_3_5,
p_4_5
)
))
})
}
parms_list <- list(
K_1_3 <- 0.3,
K_2_3 <- 0.1,
K_3_5 <- 0.3,
K_4_5 <- 0.1,
h_1_3 <- 1,
h_2_3 <- 2,
h_3_5 <- 3,
h_4_5 <- 4,
v_35S    = time_scale*c(rep(0, 5)),
eta_leaf = time_scale*0.01,
mutants = rep(0,5)
)
time_scale = 1
parms_list <- list(
K_1_3 <- 0.3,
K_2_3 <- 0.1,
K_3_5 <- 0.3,
K_4_5 <- 0.1,
h_1_3 <- 1,
h_2_3 <- 2,
h_3_5 <- 3,
h_4_5 <- 4,
v_35S    = time_scale*c(rep(0, 5)),
eta_leaf = time_scale*0.01,
mutants = rep(0,5)
)
parms_list$init <- init
fit_model = function(parms){
s1 <- ode(y = c(parms$init),
times = t,
func = tomato_model,
parms=parms,
method='lsoda')
# rootfun = root_fun,
# events = list(func = eventsfun,root=T,terminalroot=terminalroot))
return(s1)
}
s1 <- fit_model(parms_list)
parms_list <- list(
K_1_3 <- 0.3,
K_2_3 <- 0.1,
K_3_5 <- 0.3,
K_4_5 <- 0.1,
h_1_3 <- 1,
h_2_3 <- 2,
h_3_5 <- 3,
h_4_5 <- 4,
delta    = c(time_scale*2*c(0.05,0.05,0.05,0.05,0.05),0,0),
v_35S    = time_scale*c(rep(0, 5)),
eta_leaf = time_scale*0.01,
mutants = rep(0,5)
)
parms_list <- list(
K_1_3 <- 0.3,
K_2_3 <- 0.1,
K_3_5 <- 0.3,
K_4_5 <- 0.1,
h_1_3 <- 1,
h_2_3 <- 2,
h_3_5 <- 3,
h_4_5 <- 4,
delta    = c(time_scale*2*c(0.05,0.05,0.05,0.05,0.05),0,0),
v_35S    = time_scale*c(rep(0, 5)),
eta_leaf = time_scale*0.01,
mutants = rep(0,5)
)
parms_list$init <- init
s1 <- fit_model(parms_list)
delta    = c(time_scale*2*c(0.05,0.05,0.05,0.05,0.05),0,0)
delta*init
init
init <- c(0, 0.6, 0.1, 0.1, 0, 0, 1)
delta*init
rm(list = ls())
library(deSolve)
t <- seq(0, 300, by = 0.01)
time_scale = 1
init <- c(0, 0.6, 0.1, 0.1, 0, 0, 1)
inf_info <- data.frame()
parms_list <- list(
K_1_3 <- 0.3,
K_2_3 <- 0.1,
K_3_5 <- 0.3,
K_4_5 <- 0.1,
h_1_3 <- 1,
h_2_3 <- 2,
h_3_5 <- 3,
h_4_5 <- 4,
delta    = c(time_scale*2*c(0.05,0.05,0.05,0.05,0.05),0,0),
v_35S    = time_scale*c(rep(0, 5)),
eta_leaf = time_scale*0.01,
mutants = rep(0,5)
)
parms_list$init <- init
tomato_model = function(t,X,parms=NULL,...){
with(as.list(parms),{
#Hub Gene Activation
#LFY -> FD
p_1_3 = X[1]^h_1_3 / (K_1_3^h_1_3 + X[1]^h_1_3)
#FT:FD -> LFY
p_2_3 = X[2]^h_2_3 / (K_2_3^h_1_3 + X[2]^h_2_3)
#TFL1:FD -> LFY
p_3_5 = X[3]^h_3_5 / (K_3_5^h_3_5 + X[3]^h_3_5)
#AP1 -> LFY
p_4_5 = X[4]^h_4_5 / (K_4_5^h_4_5 + X[4]^h_4_5)
rho = matrix(0,nr=5,nc=2)
rho[1,1] = 1; rho[1,2] = 0
rho[2,1] = 1; rho[2,2] = 0
rho[3,2] = p_1_3*(1 - p_2_3); rho[3,1] = 1 - rho[3,2]
rho[4,1] = 1; rho[4,2] = 0
rho[5,2] = p_3_5*(1 - p_4_5); rho[5,1] = 1 - rho[5,2]
v = matrix(0,nr=5,nc=2)
v[,1] = c(eta_leaf*X[6], 0.01, 0.01, eta_leaf*X[6],0.01)
v[,2] = c(0, 0, 0.05, 0, 0.05)
v = v_35S + rowSums(rho * v)
V = rep(0,length(X))
V[1:5] = v*(1-mutants) 	# If a gene is mutated, set it's change = 0
V[6] = X[7]		# change in # leaves
V = V - delta*X  # subtract degradation
return(list(
Derivitaves = V,
globals = c(
p_1_3,
p_2_3,
p_3_5,
p_4_5
)
))
})
}
fit_model = function(parms){
s1 <- ode(y = c(parms$init),
times = t,
func = tomato_model,
parms=parms,
method='lsoda')
# rootfun = root_fun,
# events = list(func = eventsfun,root=T,terminalroot=terminalroot))
return(s1)
}
s1 <- fit_model(parms_list)
cols = c('red','blue','black','green','gray')
time_scale <- 1
x=t
plot(NA,NA,xlim = range(x),ylim = c(0,5))#range(s1[,-1]))
for(i in 2:4){
lines(s1[,1]*time_scale,s1[,i],col=cols[i-1])
}
head(s1)
for(i in 2:5){
lines(s1[,1]*time_scale,s1[,i],col=cols[i-1])
}
cols = c('red','blue','black','green','gray')
time_scale <- 1
x=t
x=x*time_scale
plot(NA,NA,xlim = range(x),ylim = c(0,5))#range(s1[,-1]))
for(i in 2:5){
lines(s1[,1]*time_scale,s1[,i],col=cols[i-1])
}
